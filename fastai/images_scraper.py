import time
import os
import concurrent.futures


# trees="Giant sequoia,Bishop pine,Coulter pine,Gray pine,Knobcone pine,Ponderosa pine,Lodgepole pine,Monterey pine,Limber pine,Jeffrey pine,Parry pinyon,Shore pine,Sugar pine,Torrey pine,Western white pine,Single-leaf pinyon pine,Great Basin bristlecone pine,Foxtail pine,Monterey cypress,Santa Lucia fir,Douglas-fir,Bigcone Douglas-fir,California nutmeg,Incense cedar,Port Orford cedar-Lawson cypress,White fir,Mountain hemlock,Red fir,Pacific yew,Valley oak,Leather oak,Blue oak,California black oak,Canyon live oak,Interior live oak,Island oak,Engelmann oak,Coast live oak,California sycamore,White alder,Quaking aspen,Fremont cottonwood,Black cottonwood,Arroyo willow,Tanoak,California bay laurel,Madrone,Toyon,Bigleaf maple,Western blue elderberry,California Buckeye,Western redbud,California black walnut,California hazelnut"


# Flora of California according to wikipedia
trees = [
'Coast redwood',
'Giant sequoia',
'Bishop pine',
'Coulter pine',
'Gray pine',
'Knobcone pine',
'Ponderosa pine',
'Lodgepole pine',
'Monterey pine',
'Limber pine',
'Jeffrey pine',
'Parry pinyon',
'Shore pine',
'Sugar pine',
'Torrey pine',
'Western white pine',
'Single-leaf pinyon pine',
'Great Basin bristlecone pine',
'Foxtail pine',
'Monterey cypress',
'Santa Lucia fir',
'Douglas-fir',
'Bigcone Douglas-fir',
'California nutmeg',
'Incense cedar',
'Port Orford cedar-Lawson cypress',
'White fir',
'Mountain hemlock',
'Red fir',
'Pacific yew',
'Valley oak',
'Leather oak',
'Blue oak',
'California black oak',
'Canyon live oak',
'Interior live oak',
'Island oak',
'Engelmann oak',
'Coast live oak',
'California sycamore',
'White alder',
'Quaking aspen',
'Fremont cottonwood',
'Black cottonwood',
'Arroyo willow',
'Tanoak',
'California bay laurel',
'Madrone',
'Toyon',
'Bigleaf maple',
'Western blue elderberry',
'California Buckeye',
'Western redbud',
'California black walnut',
'California hazelnut']

plants = ['Chamise',
'Service-berry',
'Manzanita',
'California sagebrush',
'Coyote brush',
'Calliandra',
'California lilacs',
'Desert willow',
'Flannelbush',
'Creosote bush',
'Lupines',
'Snowberry',
'Huckleberry',
'Coffeeberry',
'Lemonade berry',
'Sugarbush',
'Gooseberries and currants',
'Sages',
'California fan palm',
'Joshua tree',
'California juniper',
'Blue palo verde',
'Yellow foothill palo verde',
'Single-leaf pinyon',
'Fremont cottonwood',
'Ocotillo',
'Creosote bush',
'Indian mallow',
'Brittlebush',
'Desert agave',
'California barrel cactus',
'Banana yucca',
'Mojave yucca',
'Rush milkweed',
'Purple desert sand-verbena',
'Sacred datura',
'California poppy',
'Douglas iris',
'Monkeyflower',
'Columbine',
'Coyote mint',
'Buckwheats',
'Western wild ginger',
'Pacific bleeding-heart',
'Island coral bells',
'Canyon coral bells',
'Heucherella',
'Threeleaf foamflower',
'Redwood sorrel',
'Polypody ferns',
'Native sword ferns',
'Giant chain fern',
'Goldback ferns',
'Wood ferns',
'Maidenhair ferns',
"Ithuriel's spear",
'Meadow onion',
'Goldenstars',
'Brodiaeas',
'Blue dicks-ookow',
'Mariposa lilies',
'Baby blue eyes',
'Blazing star',
'California poppy',
'Chinese houses',
'Elegant clarkia',
'Farewell-to-spring',
'Meadowfoam',
"Miner's lettuce",
'Tarweed',
'Wind poppy',
"Dutchman's pipe vine",
'Morning glory',
'Chaparral clematis',
"Western virgin's bower",
'Calabazilla',
'Wild cucumber-manroot',
'Cucamonga manroot-bigroot',
'California wild grape',
'Desert wild grape',
'Purple three-awn',
'Blue grama',
'California fescue',
'Idaho fescue',
'Red fescue',
'Junegrass',
'Giant wildrye',
'California melic',
'Deer grass',
'Purple needlegrass',
'Indian ricegrass',
'Pine bluegrass',
'Sedges',
'Rushes',
'Western blue-eyed grass',
'Chalk lettuce',
'Coast dudleya',
'Canyon live-forever',
'Fingertips',
"Giant chalk dudleya",
'Lanceleaf liveforever',
'Broadleaf stonecrop',
'Coast sedum',
'Feather River stonecrop',
'Red Mountain stonecrop',
'Roseflower stonecrop',
'Sierra stonecrop']



def google_images(obj):
	os.system("python3 google_images_download.py -k '"+obj+"' -sk 'tree' -l 30 -s 'medium' -t 'photo' -o '../../TreeIdentifier/'")

def flickr_images(obj):
	

t0 = time.time()

with concurrent.futures.ProcessPoolExecutor() as executor:
# for obj in objects:
	executor.map(google_images, trees)



print("\n")
print("All Done!")

t1 = time.time()  # stop the timer
total_time = t1 - t0  # Calculating the total time required to crawl, find and download all the links of 60,000 images
print("Total time taken: " + str(total_time) + " Seconds")

